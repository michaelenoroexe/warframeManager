version: '3'
networks:
  loki:
  production:

services:

##### PRODUCTION SECTION #####

  node:
    container_name: node
    build: .
    ports:
      - "80:80"
      # - "80:4200"    # FOR TESTING WITHOUT NGINX
      - "49153:49153"
    volumes:
      - .:/app:rw
      - "/app/node_modules"
    networks:
      - production
    logging:
      driver: "json-file"
      options: 
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  pgadmin:
    image: dpage/pgadmin4:4.18
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 545
    ports:
    - "545:545"
    volumes:
    - pgadmin-data:/var/lib/pgadmin
    links:
      - "postgres:pgsql-server"
    networks:
      - production
  
  postgres:
    container_name: database
    restart: always
    image: postgres:14.2-alpine
    environment:
      POSTGRES_DB: "database"
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "admin"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ../2. Init Database:/docker-entrypoint-initdb.d
      - pgdata:/var/lib/postgresql/pgdata
    ports:
      - "5432:5432"
    networks:
      - production
    logging:
      driver: "json-file"
      options: 
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

##### END OF PRODUCTION SECTION #####


##### MONITORING #####
  loki:
    image: grafana/loki:master
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - loki
      - production

  promtail:
    image: grafana/promtail:master
    container_name: promtail
    volumes:
      - ./monitoring/promtail-conf.yml:/etc/promtail/docker-config.yaml
      - /var/lib/docker/containers/:/var/host_system/docker/containers/
      - /var/log/:/var/host_system/log/:ro
    command: -config.file=/etc/promtail/docker-config.yaml
    networks:
      - loki

  grafana:
    image: grafana/grafana:master
    container_name: grafana
    ports:
      - "550:3000"
    # command: -config=/usr/share/grafana/conf/provisioning/datasources/datasources.yml
    volumes:
      - ./monitoring/grafana_provisioning:/etc/grafana/provisioning
    networks:
      - loki

  cadvisor-exporter:
      container_name: "cadvisor"
      image: google/cadvisor
      ports:
        - "9200:8080"
      volumes:
        - "/var/run:/var/run:rw"
        - "/sys:/sys:ro"
        - "/var/lib/docker/:/var/lib/docker:ro"
      restart: unless-stopped
      networks:
        - loki

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus-conf.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      - loki

##### END OF MONITORING #####

volumes:
  pgdata:
  pgadmin-data:
  prometheus_data: