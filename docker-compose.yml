version: '3'
networks:
  loki:
  production:

services:
  node:
    container_name: node
    build: .
    ports:
      - "80:80"
      - "49153:49153"
    volumes:
      - .:/app:rw
      - "/app/node_modules"
    networks:
      - production
    logging:
      driver: "json-file"
      options: 
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  pgadmin:
    image: dpage/pgadmin4:4.18
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 545
    ports:
    - "545:545"
    volumes:
    - pgadmin-data:/var/lib/pgadmin
    links:
      - "postgres:pgsql-server"
    networks:
      - production
  
  postgres:
    container_name: database
    restart: always
    image: postgres:14.2-alpine
    environment:
      POSTGRES_DB: "database"
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "admin"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ../2. Init Database:/docker-entrypoint-initdb.d
      - pgdata:/var/lib/postgresql/pgdata
    ports:
      - "5432:5432"
    networks:
      - production
    logging:
      driver: "json-file"
      options: 
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  loki:
    image: grafana/loki:master
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - loki
      - production

  promtail:
    image: grafana/promtail:master
    container_name: promtail
    volumes:
      - ./loki/loki-promtail-conf.yml:/etc/promtail/docker-config.yaml
      - /var/lib/docker/containers/:/var/lib/docker/containers/
    command: -config.file=/etc/promtail/docker-config.yaml
    networks:
      - loki

  grafana:
    image: grafana/grafana:master
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - loki

volumes:
  pgdata:
  pgadmin-data: